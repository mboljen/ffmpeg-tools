#!/usr/bin/env bash
#
# Created:         Thu 2020-07-16 02:00:30 CEST
# Last Modified:   Thu 2023-09-28 23:20:19 CEST
#
# ffmpeg-cattsfile:
#    Concatenate multiple TS video files.
#
set -euo pipefail

# Help text
usage() {
>&2 cat << EOF

Usage: ffmpeg-cattsfile [OPTION] INFILE... OUTFILE

Concatenate multiple TS video files.

Options:
  -y, --yes   Overwrite existing files
  -h, --help  Show this help message and exit
EOF
}

# Echo error messages on STDERR
echoerr() { cat <<< "$@" 1>&2; }

# Initialization
FFMPEG=$(command -v ffmpeg)

# Check availability of ffmpeg
if ! [ -x "${FFMPEG}" ]
then
    echoerr "ffmpeg not found, probably not installed"
    exit 1
fi

# Defaults
YES=0

# Parse command line options
args=$(getopt -a -o hy --long help,yes -- "$@")
if [[ $? -gt 0 ]]
then
    echoerr "Error processing command line options"
    usage
    exit 1
fi

# Process command line options
eval set -- ${args}
while :
do
    case $1 in
      -y | --yes)    YES=1 ; shift ;;
      -h | --help)   usage ; shift ; exit 0 ;;
      # -- means the end of the arguments; drop this, and break out of the while loop
      --) shift; break ;;
       *) echoerr "Unsupported option: $1"; usage ; shift; exit 1 ;;
    esac
done


# Check number of arguments
if [ "$#" -lt 2 ]
then
    echoerr "Expecting at least 3 arguments"
    usage
    exit 1
fi

# Get last argument
OUTFILE="${!#}"

# Check if output file exists
if [ -f "${OUTFILE}" ] && [ "${YES}" -eq 0 ]
then
    echoerr "Outfile \"${OUTFILE}\" already exists"
    exit 1
fi

# Loop over arguments
OPT=""
for (( i = 1; i < $#; ++i ))
do
    # Check if file exists
    if [ ! -f "${!i}" ]
    then
        echoerr "Input file \"${!i}\" does not exist"
        exit 1
    fi
    # Append current filename to options string
    [ "$i" -gt 1 ] && OPT+="|"
    OPT+="${!i}"
done

# Invoke ffmpeg
"${FFMPEG}" -y -i "concat:${OPT}" -c copy "${OUTFILE}"
